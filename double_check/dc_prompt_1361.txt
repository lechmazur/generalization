Theme, rule, criterion, or category (referred to as "theme"): Software development methodologies named after warriors or combat-related terms that gained prominence in the 1990s

Here are four examples intended to follow this theme:
1. Scrum
2. Extreme Programming
3. Crystal
4. Agile

Your first task is to evaluate the examples above on a scale of scores 0 (least), 1, 2, 3... to 10 (most) based on how well they align with the theme and whether they don't too obviously reveal the theme. For each example, output its number in tags <number></number> and its score as an integer in tags <score></score>. For example:

<number>1</number><score>6</score>
<number>2</number><score>9</score>
<number>3</number><score>0</score>
<number>4</number><score>4</score>

Here are anti-examples intended to follow a broader category but not the specific theme:
5. Waterfall
6. Kanban
7. Lean
8. RAD
9. Spiral
10. DevOps
11. V-Model
12. Prototyping
13. DSDM
14. FDD
15. JAD
16. RUP
17. MSF
18. TDD
19. BDD
20. ASD
21. PRINCE2
22. Six Sigma
23. CMMI
24. Iterative

Your second task is to evaluate candidates listed above. This time, the candidates are "anti-examples" that not meant to exemplify the specific theme but rather a theme that is more general or similar. They could be misleading the user into confusion. Anti-examples could be examples of things connected, linked, or associated to the specific theme BUT NOT examples of this specific theme (unlike earlier). Evaluate them on a scale of 0 (least), 1, 2, 3... to 10 (most) based on how well they represent this specification of not matching the specific theme but matching something broader or connected. Use the same format as before. Example:

<number>5</number><score>2</score>
<number>6</number><score>8</score>
...
<number>24</number><score>3</score>

Do not output anything else.
