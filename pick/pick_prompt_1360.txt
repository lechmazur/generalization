Here are three examples of a specific theme, rule, category, or criterion (referred to as "theme"):
A hospital emergency room uses a visual board to track patients' status, moving them through triage, treatment, and discharge.
A sales team uses a whiteboard with sticky notes representing leads, moving them through stages like "Prospecting," "Qualifying," "Proposal," and "Closed."
A manufacturing plant uses a physical board with cards representing work orders, tracking their progress through assembly, quality control, and shipping.

Here are three anti-examples that do not match this specific theme but can match a broader theme. They could follow various more general versions of this theme, or of themes that are connected, linked, associated with the specific theme BUT they are not examples of the exact theme. They are purposefully chosen to be misleading:
A spreadsheet tracking inventory levels.
A Gantt chart showing project timelines.
A project management software with task lists.

Your task is to evaluate the candidates below on a scale of 0 (worst match) to 10 (best match) based on how well they match just the specific theme identified from the examples but not with the broader, related, or general theme based on the anti-examples. For each candidate, output its score as an integer. These scores will be used for rankings, so ensure they are granual, nuanced, graded, continuous and not polarized (so not just 0s and 10s). Use the full range of possible scores (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10), not a limited range (e.g. nothing but 0s or 1s). Follow this format:
<number>1</number><score>3</score>
<number>2</number><score>7</score>
...
<number>8</number><score>4</score>

No additional comments are needed. Do not output the theme itself. Output English ONLY. You must use the specified tags.

Candidates:
1. A dashboard displaying key performance indicators.
2. A software development team uses a Kanban board with columns for "To Do," "In Progress," "Testing," and "Done" to manage their tasks. <<LEFTOVER>>
3. A network diagram showing dependencies between tasks.
4. A bug tracking system for software development.
5. A flowchart illustrating a process.
6. A queue management system with numbered tickets.
7. A CRM system for managing customer relationships.
8. A database of customer information.
